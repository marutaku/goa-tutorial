// Code generated by goa v3.14.1, DO NOT EDIT.
//
// calc service
//
// Command:
// $ goa gen calc/design

package calc

import (
	"context"
)

// The calc service performs operations on numbers.
type Service interface {
	// Multiply implements multiply.
	Multiply(context.Context, *MultiplyPayload) (res *MultiplyResult, err error)
	// Addition implements addition.
	Addition(context.Context, *AdditionPayload) (res *AdditionResult, err error)
	// Division implements division.
	Division(context.Context, *DivisionPayload) (res *DivisionResult, err error)
	// Subtraction implements subtraction.
	Subtraction(context.Context, *SubtractionPayload) (res *SubtractionResult, err error)
	// SquareRoot implements SquareRoot.
	SquareRoot(context.Context, *SquareRootPayload) (res *SquareRootResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "calc"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"multiply", "addition", "division", "subtraction", "SquareRoot"}

// AdditionPayload is the payload type of the calc service addition method.
type AdditionPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// AdditionResult is the result type of the calc service addition method.
type AdditionResult struct {
	Result int
}

// DivisionPayload is the payload type of the calc service division method.
type DivisionPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// DivisionResult is the result type of the calc service division method.
type DivisionResult struct {
	Result float64
}

// MultiplyPayload is the payload type of the calc service multiply method.
type MultiplyPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// MultiplyResult is the result type of the calc service multiply method.
type MultiplyResult struct {
	Result int
}

// SquareRootPayload is the payload type of the calc service SquareRoot method.
type SquareRootPayload struct {
	// number
	A int
}

// SquareRootResult is the result type of the calc service SquareRoot method.
type SquareRootResult struct {
	Result float64
}

// SubtractionPayload is the payload type of the calc service subtraction
// method.
type SubtractionPayload struct {
	// Left operand
	A int
	// Right operand
	B int
}

// SubtractionResult is the result type of the calc service subtraction method.
type SubtractionResult struct {
	Result int
}
